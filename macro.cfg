[gcode_macro CHANGE_FILAMENT]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Change Filament"
    RESPOND TYPE=command MSG="action:prompt_text Unloading filament, please wait..."
    RESPOND TYPE=command MSG="action:prompt_show"
    UNLOAD_FILAMENT
    RESPOND TYPE=command MSG="action:prompt_begin Change Filament"
    RESPOND TYPE=command MSG="action:prompt_text Insert new filament"
    RESPOND TYPE=command MSG="action:prompt_footer_button Load|_CHANGE_FILAMENT_LOAD"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _CHANGE_FILAMENT_LOAD]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Change Filament"
    RESPOND TYPE=command MSG="action:prompt_text Loading filament, please wait..."
    RESPOND TYPE=command MSG="action:prompt_show"
    LOAD_FILAMENT
    RESPOND TYPE=command MSG='action:prompt_end'

[gcode_macro _TOGGLE_LED]
gcode:
    SET_PIN PIN=led VALUE={(not printer['output_pin led'].value)|int}

[gcode_macro LOAD_FILAMENT]
gcode:
    {% set cooldown = printer.extruder.target<=0 %}
    {% if printer.extruder.target<200 %}
        {% set temp=params.TEMP|default(230) %}
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp-10}
    {% else %}
        {% set temp=printer.extruder.target %}
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp-10}
    {% endif %}
    G91
    G1 E40 F3000
    G1 E40 F300
    G90
    {% if cooldown %}
        SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
    {% endif %}

[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set cooldown = printer.extruder.target<=0 %}
    {% if not printer.extruder.target %}
        {% set temp=params.TEMP|default(printer.configfile.settings.extruder.min_extrude_temp) %}
    {% else %}
        {% set temp=printer.extruder.target %}
    {% endif %}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp}
    G91
    G1 E-40 F600
    G1 E-40 F3000
    G90
    {% if cooldown %}
        SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
    {% endif %}

[gcode_macro _START_PRINT]
gcode:
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.BED_TEMP}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.BED_TEMP}
    G28
    SET_PIN PIN=led VALUE=1
    BED_MESH_CALIBRATE ADAPTIVE=1
    G0 X-30 Y-110 Z0.4 F5000
    NEOPIXEL_DISPLAY LED=led TYPE=extruder_temp MODE=glow
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={params.PRINT_TEMP}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.PRINT_TEMP}
    SET_LED_TEMPLATE LED=led TEMPLATE=
    SET_LED LED=led GREEN=1 RED=1 BLUE=1
    G92 E0 
    G3 X30 I30 J110 E20 F500
    G92 E0

[gcode_macro _END_PRINT]
gcode:
    M400
    G91
    G1 E-1 F6000
    #   Get Boundaries
    {% set max_x = printer.toolhead.axis_maximum.x|float %}
    {% set max_y = printer.toolhead.axis_maximum.y|float %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set distance = 20 %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - distance) %}
        {% set x_safe = distance %}
    {% else %}
        {% set x_safe = -distance %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - distance) %}
        {% set y_safe = distance %}
    {% else %}
        {% set y_safe = -distance %}
    {% endif %}

    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    G0 Z30 F2000
    G90
    TURN_OFF_HEATERS
    M107
    SET_PIN PIN=led VALUE=0
    G28
    M84

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    _END_PRINT
    CANCEL_PRINT_BASE {rawparams}

[gcode_macro PAUSE]
rename_existing: PAUSE_BASE
gcode:
    SAVE_GCODE_STATE NAME=PAUSE_state
    PAUSE_BASE {rawparams}
    G91
    G1 E-2 F1200
    G1 Z50
    G90
    G1 X0 Y0 F6000
	
[gcode_macro RESUME]
rename_existing: RESUME_BASE
gcode:
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    G91
    G1 E2 F1200
    G90
    RESUME_BASE {rawparams}

[gcode_macro _LINE_PURGE]
description: A purge macro that adapts to be near your actual printed objects
gcode:
    # Get relevant printer params
    {% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
    {% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
    
    # Use firmware retraction if it is defined
    {% if printer.firmware_retraction is defined %}
        {% set RETRACT = G10 | string %}
        {% set UNRETRACT = G11 | string %}
    {% else %}
        {% set RETRACT = 'G1 E-.5 F2100' | string %}
        {% set UNRETRACT = 'G1 E.5 F2100' | string %}
    {% endif %}

    # Get purge settings from _Kamp_Settings
    {% set purge_height = 0.8 | float %}
    {% set tip_distance = 1 | float %}
    {% set purge_margin = 10 | float %}
    {% set purge_amount = 30 | float %}
    {% set flow_rate = 12 | float %}


    # Calculate purge origins and centers from objects
    {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}    # Get all object points
    {% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}                          # Object x min
    {% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}                          # Object x max
    {% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}                          # Object y min
    {% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}                          # Object y max

    {% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}      # Create center point of purge line relative to print on X axis
    {% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}      # Create center point of purge line relative to print on Y axis

    {% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}                                  # Add margin to x min, compare to 0, and choose the larger
    {% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}                                  # Add margin to y min, compare to 0, and choose the larger

    # Calculate purge speed
    {% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}

    {% if cross_section < 5 %}

        {action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}

    {% else %}

        {% if printer.firmware_retraction is defined %}
            {action_respond_info("KAMP purge is using firmware retraction.")}
        {% else %}
            {action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
        {% endif %}

        {% if purge_y_origin > 0 %}
        
            {action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(                                                                 
                (purge_x_center),
                (purge_y_origin),
                (purge_amount),
                (flow_rate),
            )) }
    
        {% else %}
    
            {action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(                                                                 
                (purge_x_origin),
                (purge_y_center),
                (purge_amount),
                (flow_rate),
            )) }

        {% endif %}

        SAVE_GCODE_STATE NAME=Prepurge_State                                                    # Create gcode state

        {% if purge_y_origin > 0 %}                                                             # If there's room on Y, purge along X axis in front of print area

            G92 E0                                                                              # Reset extruder
            G0 F{travel_speed}                                                                  # Set travel speed
            G90                                                                                 # Absolute positioning
            G0 X{purge_x_center} Y{purge_y_origin}                                              # Move to purge position
            G0 Z{purge_height}                                                                  # Move to purge Z height
            M83                                                                                 # Relative extrusion mode
            G1 E{tip_distance} F{purge_move_speed}                                              # Move filament tip
            G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}             # Purge line
            {RETRACT}                                                                           # Retract
            G0 X{purge_x_center + purge_amount + 10} F{travel_speed}                            # Rapid move to break string
            G92 E0                                                                              # Reset extruder distance
            M82                                                                                 # Absolute extrusion mode
            G0 Z{purge_height * 2} F{travel_speed}                                              # Z hop

        {% else %}                                                                              # If there's room on X, purge along Y axis to the left of print area
            
            G92 E0                                                                              # Reset extruder
            G0 F{travel_speed}                                                                  # Set travel speed
            G90                                                                                 # Absolute positioning
            G0 X{purge_x_origin} Y{purge_y_center}                                              # Move to purge position
            G0 Z{purge_height}                                                                  # Move to purge Z height
            M83                                                                                 # Relative extrusion mode
            G1 E{tip_distance} F{purge_move_speed}                                              # Move filament tip
            G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}             # Purge line
            {RETRACT}                                                                           # Retract
            G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}                            # Rapid move to break string
            G92 E0                                                                              # Reset extruder distance
            M82                                                                                 # Absolute extrusion mode
            G0 Z{purge_height * 2} F{travel_speed}                                              # Z hop

        {% endif %}

        RESTORE_GCODE_STATE NAME=Prepurge_State                                                 # Restore gcode state
    
    {% endif %}